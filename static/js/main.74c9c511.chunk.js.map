{"version":3,"sources":["components/ImgSlideshow.js","components/ListingItem.js","actions/listings.js","selectors/listings.js","reducers/screen.js","actions/screen.js","selectors/screen.js","components/ListingCarousel.js","logo.svg","App.js","reducers/index.js","reducers/listings.js","index.js","middlewares/log.js"],"names":["ImgSlideshow","imgs","useState","imgNum","setImgNum","prevImgNum","setPrevImgNum","pristine","setPristine","imgsRef","useRef","getNextImgNum","useCallback","n","current","length","getPrevImgNum","useEffect","imgToLoad","src","dataset","className","map","img","index","key","id","alt","caption","url","data-src","ref","element","push","addToRef","onClick","e","stopPropagation","ListingItem","listing","screensize","listing_url","window","location","href","photos","sub_category_formatted","attributes","price_formatted","address_line_1","bedrooms","bathrooms","area_size_formatted","UPDATE_LISTINGS","updateListings","listings","pageNum","payload","type","fetchData","dispatch","superagent","get","then","res","body","data","sections","selectAllListing","state","firstRender","UPDATE_SCREENSIZE","screensizes","calculateScreensize","width","updateScreensize","getScreensize","screen","ListingCarousel","useSelector","selectAllListings","useDispatch","gridRef","endOfGridRef","innerWidth","handleResize","addEventListener","removeEventListener","scrollObserver","container","endOfContainer","intersectionObserver","IntersectionObserver","entries","observer","forEach","entry","intersectionRatio","disconnect","root","observe","slice","App","logo","Component","combineReducers","action","oldListings","concat","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","getState","a","console","log","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74c9c511.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nconst ImgSlideshow = ({ imgs = [] }) => {\n    const [imgNum, setImgNum] = useState(0);\n    const [prevImgNum, setPrevImgNum] = useState(0);\n    const [pristine, setPristine] = useState(true);\n    const imgsRef = useRef([]);\n\n    // Calculate the index of the next img\n    const getNextImgNum = useCallback((n) => {\n        return n < imgsRef.current.length - 1 ? n + 1 : 0;\n    }, []);\n\n    // Calculate the index of the previous img\n    const getPrevImgNum = useCallback((n) => {\n        return n > 0 ? n - 1 : imgsRef.current.length - 1;\n    }, []);\n\n    // UseEffect Hook to lazily load next image\n    useEffect(() => {\n        if (imgsRef.current.length > 0) {\n            const imgToLoad = imgsRef.current[getNextImgNum(imgNum)];\n            imgToLoad.src = imgToLoad.dataset.src;\n        }\n    }, [imgsRef, imgNum, getNextImgNum]);\n\n    // Add to ref\n    const addToRef = (element) => {\n        if (imgsRef.current.length < imgs.length) {\n            imgsRef.current.push(element);\n        }\n    };\n\n    // Handle next chevron\n    const nextImg = (e) => {\n        e.stopPropagation();\n        if (pristine) {\n            setPristine(false);\n        } else if (imgNum === imgsRef.current.length - 1) {\n            return;\n        } else {\n            setPrevImgNum(imgNum);\n        }\n        setImgNum((n) => getNextImgNum(n));\n    };\n\n    // Handle prev chevron\n    const prevImg = (e) => {\n        e.stopPropagation();\n\n        if (imgNum === 0) return;\n\n        setPrevImgNum(imgNum);\n        setImgNum((n) => getPrevImgNum(n));\n    };\n\n    // Function to handle animations\n    const getClassNames = (n) => {\n        if (pristine) {\n            return n === 0 ? \"show\" : \"hidden-right\";\n        } else if (imgNum > prevImgNum) {\n            if (imgNum === n) {\n                return \"enter-from-right\";\n            } else if (prevImgNum === n) {\n                return \"exit-to-left\";\n            } else {\n                return n > imgNum ? \"hidden-right\" : \"hidden-left\";\n            }\n        } else {\n            if (imgNum === n) {\n                return \"enter-from-left\";\n            } else if (prevImgNum === n) {\n                return \"exit-to-right\";\n            } else {\n                return n > imgNum ? \"hidden-right\" : \"hidden-left\";\n            }\n        }\n    };\n\n    return (\n        <div className={`slideshow-container`}>\n            {imgs.map((img, index) => {\n                return (\n                    <img\n                        key={`${img.id}${index}`}\n                        className={`slideshow-img ${getClassNames(index)}`}\n                        alt={img.caption}\n                        src={(index === 0 && img.url) || \"\"}\n                        data-src={img.url}\n                        ref={(element) => addToRef(element)}\n                    />\n                );\n            })}\n            <button className=\"prev-image-button\" onClick={prevImg}>\n                <i className=\"fas fa-chevron-left\"></i>\n            </button>\n            <button className=\"next-image-button\" onClick={nextImg}>\n                <i className=\"fas fa-chevron-right\"></i>\n            </button>\n        </div>\n    );\n};\n\nexport default ImgSlideshow;\n","import React from \"react\";\nimport ImgSlideshow from \"./ImgSlideshow\";\n\nconst ListingItem = ({ listing, screensize = \"xs\" }) => {\n    // Use template literal to compose the listing url\n    const listing_url = `https://99.co${listing.listing_url}`;\n\n    // onClick handler to redirect user to listing url\n    const onClickHandler = () => {\n        window.location.href = listing_url;\n    };\n\n    return (\n        <div className={`grid-item-${screensize}`} onClick={onClickHandler}>\n            {/* Determine if the slideshow should be used */}\n            {(screensize !== \"xs\" && (\n                <ImgSlideshow imgs={listing.photos} />\n            )) || (\n                <img\n                    className=\"listing-image\"\n                    src={`${listing.photos[0].url}`}\n                />\n            )}\n            <div className=\"listing-details-container\">\n                <p className=\"listing-title\">\n                    {`${listing.sub_category_formatted} FOR SALE`}\n                </p>\n                <h5 className=\"listing-price\">{`${listing.attributes.price_formatted}`}</h5>\n                <a\n                    href={listing_url}\n                    className=\"listing-address\"\n                >{`${listing.address_line_1}`}</a>\n                <p className=\"listing-details\">{`${listing.attributes.bedrooms} Beds   ${listing.attributes.bathrooms} Baths   ${listing.attributes.area_size_formatted}`}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default ListingItem;\n","import superagent from \"superagent\";\n\nexport const UPDATE_LISTINGS = \"UPDATE_LISTINGS\";\nexport const FETCH_LISTINGS_ERROR = \"FETCH_LISTINGS_ERROR\";\n\nexport function updateListings(listings, pageNum) {\n    return {\n        payload: {\n            listings,\n            pageNum,\n        },\n        type: UPDATE_LISTINGS,\n    };\n}\n\nexport function fetchListingsError() {\n    return {\n        type: FETCH_LISTINGS_ERROR,\n    };\n}\n\nexport function fetchData(dispatch, pageNum = 1) {\n    superagent\n        .get(\n            `https://www.99.co/api/v1/web/search/listings?query_limit=radius&query_type=city&page_size=20&zoom=11&listing_type=sale&query_coords=1.3039947,103.8298507&page_num=${pageNum}&radius_max=1000&map_bounds=1.5827095153768858,103.49449749970108,1.1090706240313446,104.12483807587296`\n        )\n        .then(\n            (res) => {\n                const data = res.body.data;\n                const listings = data.sections[0].listings;\n                dispatch(updateListings(listings, pageNum));\n            },\n            (e) => {\n                dispatch(fetchListingsError());\n            }\n        );\n}\n","export default function selectAllListing(state) {\n    return {\n        listings: state.listings.listings,\n        firstRender: state.listings.firstRender,\n        pageNum: state.listings.pageNum,\n    };\n}\n","export const UPDATE_SCREENSIZE = \"UPDATE_SCREENSIZE\";\n\nexport default function screen(\n    state = { width: 575, screensize: \"xs\" },\n    action\n) {\n    switch (action.type) {\n        case UPDATE_SCREENSIZE:\n            return {\n                ...state,\n                width: action.payload,\n                screensize: calculateScreensize(action.payload),\n            };\n        default:\n            return state;\n    }\n}\n\nconst screensizes = {\n    s: 576,\n    m: 768,\n    l: 992,\n    xl: 1200,\n};\n\nconst calculateScreensize = (width) => {\n    switch (true) {\n        case width < screensizes.s:\n            return \"xs\";\n        case width >= screensizes.s && width < screensizes.m:\n            return \"s\";\n        case width >= screensizes.m && width < screensizes.l:\n            return \"m\";\n        case width >= screensizes.l && width < screensizes.xl:\n            return \"l\";\n        case width >= screensizes.xl:\n            return \"xl\";\n        default:\n            return \"xs\";\n    }\n};\n","import { UPDATE_SCREENSIZE } from \"../reducers/screen\";\n\nexport function updateScreensize(screensize) {\n    return {\n        payload: screensize,\n        type: UPDATE_SCREENSIZE,\n    };\n}\n","export default function getScreensize(state) {\n    return {\n        screensize: state.screen.screensize,\n        width: state.screen.width,\n    };\n}\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListingItem from \"./ListingItem\";\nimport { fetchData } from \"../actions/listings\";\nimport selectAllListings from \"../selectors/listings\";\nimport { updateScreensize } from \"../actions/screen\";\nimport getScreensize from \"../selectors/screen\";\n\nconst ListingCarousel = () => {\n    // Selectors to obtain redux state\n    const { listings, pageNum } = useSelector(selectAllListings);\n    const { screensize } = useSelector(getScreensize);\n    // Get dispatch function from redux to update states\n    const dispatch = useDispatch();\n    // Reference to for IntersectionObserver to load more data\n    const gridRef = useRef(null);\n    const endOfGridRef = useRef(null);\n\n    // Perform first fetch of listing data\n    useEffect(() => {\n        fetchData(dispatch);\n    }, [dispatch]);\n    useEffect(() => {\n        dispatch(updateScreensize(window.innerWidth));\n    }, [dispatch]);\n\n    // UseEffect Hook to listen for window resize\n    useEffect(() => {\n        const handleResize = () => {\n            dispatch(updateScreensize(window.innerWidth));\n        };\n\n        window.addEventListener(\"resize\", handleResize);\n        // Return cleanup function\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, [dispatch]);\n\n    // Create function to listen when user scrolls to the end\n    const scrollObserver = useCallback(\n        (container, endOfContainer) => {\n            // Callback function when reached the end of grid\n            const obsCallback = (entries, observer) => {\n                entries.forEach((entry) => {\n                    if (entry.intersectionRatio > 0) {\n                        fetchData(dispatch);\n                        observer.disconnect();\n                    }\n                });\n            };\n            // Setting up new intersection observer\n            const intersectionObserver = new IntersectionObserver(obsCallback, {\n                root: container.current,\n            });\n            intersectionObserver.observe(endOfContainer);\n            return intersectionObserver;\n        },\n        [pageNum, dispatch]\n    );\n\n    // useEffect hook to create scroll observer\n    useEffect(() => {\n        if (\n            // Ensure that the references have loaded, listings have loaded and the sreen is mobile\n            gridRef.current &&\n            endOfGridRef.current &&\n            listings.length &&\n            screensize === \"xs\"\n        ) {\n            const observer = scrollObserver(\n                gridRef.current,\n                endOfGridRef.current\n            );\n            // Return function to cleanup observer\n            return () => {\n                observer.disconnect();\n            };\n        }\n    }, [gridRef, endOfGridRef, listings, scrollObserver]);\n\n    // Function to create items for listings\n    const items = () => {\n        if (screensize !== \"xs\") {\n            return listings\n                .slice(0, 4)\n                .map((listing, index) => (\n                    <ListingItem\n                        key={index}\n                        listing={listing}\n                        screensize={screensize}\n                    />\n                ));\n        }\n\n        return listings.map((listing, index) => (\n            <ListingItem\n                key={index}\n                listing={listing}\n                screensize={screensize}\n            />\n        ));\n    };\n\n    return (\n        <div className=\"carousel-section\">\n            <div className={`carousel-container-${screensize}`}>\n                <div className={`grid-${screensize}`} ref={gridRef}>\n                    {screensize === \"xs\" && <div></div>}\n                    {listings.length > 0 && items()}\n                    <div ref={endOfGridRef}></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ListingCarousel;\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from \"react\";\nimport ListingCarousel from \"./components/ListingCarousel\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h2>Listing Carousel</h2>\n                </div>\n                <div className=\"carousel-section\">\n                    <ListingCarousel />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport listings from \"./listings\";\nimport screen from \"./screen\";\n\nexport default combineReducers({\n    listings,\n    screen,\n});\n","import { UPDATE_LISTINGS } from \"../actions/listings\";\n\nexport default function listings(\n    state = { listings: [], firstRender: true, pageNum: 1 },\n    action\n) {\n    switch (action.type) {\n        case UPDATE_LISTINGS:\n            const oldListings =\n                typeof state.listings === \"undefined\" ? [] : state.listings;\n            return {\n                ...state,\n                listings: oldListings.concat(action.payload.listings),\n                pageNum: action.payload.pageNum,\n                firstRender: false,\n            };\n        default:\n            return state;\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport log from \"./middlewares/log\";\nimport App from \"./App\";\nimport rootReducer from \"./reducers\";\nimport \"./index.css\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(log, thunk))\n);\nfunction render() {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById(\"root\")\n    );\n}\n\nrender();\n","export default function thunk({ dispatch, getState }) {\n  return function (n) {\n    return function (a) {\n      if (typeof a === 'function') {\n        a(dispatch, getState);\n      } else {\n        console.log(a.type);\n      }\n\n      return n(a);\n    };\n  };\n}\n"],"sourceRoot":""}